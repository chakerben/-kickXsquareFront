{"version":3,"sources":["webpack://gatsby-starter-default/./src/templates/preview.js"],"names":["locale","slug","data","useState","secretPage","setSecretPage","pageContext","setPageContext","useCookies","cookies","setCookie","location","useLocation","secret","URLSearchParams","search","get","site","siteMetadata","languages","locales","defaultLocale","strapiGlobal","metaData","metadata","metaTitle","strapiPreview","process","GATSBY_PREVIEW_SECRET","path","secure","sameSite","useEffect","fetchData","fetchAPI","context","id","localizations","isPreview","localizedPaths","getLocalizedPaths","global","seo","sections","contentSections","className"],"mappings":"iPAoGA,UAjFoB,SAAC,GAA4B,IAA1BA,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACnC,GAAoCC,cAAS,MAAtCC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,cAAS,MAAxCG,EAAP,KAAoBC,EAApB,KACA,GAA6BC,SAAtBC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,mBAEXC,EADS,IAAIC,gBAAgBH,EAASI,QACtBC,IAAI,UAC1B,EAOId,EANFe,KACEC,aACEC,UAAaC,EAHnB,EAGmBA,QAASC,EAH5B,EAG4BA,cAG1BC,EACEpB,EADFoB,aAGIC,EAAWnB,GAAU,iBACtBA,EAAWoB,SADW,CAEzBC,UAAU,WAAYrB,EAAWoB,SAASC,YAsC5C,OAjCEhB,EAAQiB,gBAAkBC,GAAYC,uBACtCf,IAAWc,GAAYC,uBAEvBlB,EAAU,gBAAiBiB,GAAYC,sBAAuB,CAC5DC,KAAM,IACNC,OAAQH,aACRI,SAAU,YAIdC,gBAAU,WACR,IAAMC,EAAS,mCAAG,2GACKC,OAAS,kBAAkBlC,EAAnB,SAAkCC,GAD/C,gBACTC,EADS,KAEhBG,EAAcH,GAERiC,EAAU,CACdlC,KAAMC,EAAKD,KACXmC,GAAIlC,EAAKkC,GACTpC,OAAQE,EAAKF,OACbqC,cAAenC,EAAKmC,cACpBjB,UACAC,gBACAiB,WAAW,GAGPC,GAAiBC,uBAAkBL,GAEzC5B,EAAe,OAAD,UAAM4B,EAAN,CAAeI,oBAhBb,2CAAH,qDAmBfN,MACC,CAAChC,EAAMmB,EAASC,EAAerB,IAE7BM,GAAgBgB,EAIhBb,EAAQiB,cAWT,gBAAC,IAAD,CAAQpB,YAAaA,EAAamC,OAAQnB,EAAcoB,IAAKnB,GAC1DnB,GACC,2BACE,gBAAC,IAAD,CAAUuC,SAAUvC,EAAWwC,oBAZrC,gBAAC,IAAD,CAAQtC,YAAaA,EAAamC,OAAQnB,GACxC,uBAAKuB,UAAU,oBAAf,uDANG","file":"component---src-templates-preview-js-7f123bb7d7bcf3505166.js","sourcesContent":["/**\n * You can preview pages with URLs like this:\n * http://localhost:8001/preview/<slug>?secret=<preview-secret>\n * where <preview-secret> is the GATSBY_PREVIEW_SECRET variable defined in your .env config\n * and <slug> is the slug you entered in Strapi for your page\n */\n\nimport React, { useState, useEffect } from \"react\"\n\nimport { fetchAPI } from \"@/utils/api\"\nimport { getLocalizedPaths } from \"@/utils/localize\"\n\nimport Sections from \"@/components/sections\"\nimport Layout from \"@/components/layout\"\n\nimport { useLocation } from \"@reach/router\"\nimport { useCookies } from \"react-cookie\"\nimport { graphql } from \"gatsby\"\n\nconst PreviewPage = ({ locale, slug, data }) => {\n  const [secretPage, setSecretPage] = useState(null)\n  const [pageContext, setPageContext] = useState(null)\n  const [cookies, setCookie] = useCookies()\n  const location = useLocation()\n  const params = new URLSearchParams(location.search)\n  const secret = params.get(\"secret\")\n  const {\n    site: {\n      siteMetadata: {\n        languages: { locales, defaultLocale },\n      },\n    },\n    strapiGlobal,\n  } = data\n\n  const metaData = secretPage && {\n    ...secretPage.metadata,\n    metaTitle: `Preview ${secretPage.metadata.metaTitle}`,\n  }\n\n  // The user is correctly trying to access the preview page\n  if (\n    cookies.strapiPreview !== process.env.GATSBY_PREVIEW_SECRET &&\n    secret === process.env.GATSBY_PREVIEW_SECRET\n  ) {\n    setCookie(\"strapiPreview\", process.env.GATSBY_PREVIEW_SECRET, {\n      path: \"/\",\n      secure: process.env.NODE_ENV,\n      sameSite: \"Strict\",\n    })\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const [data] = await fetchAPI(`/pages?_locale=${locale}&slug=${slug}`)\n      setSecretPage(data)\n\n      const context = {\n        slug: data.slug,\n        id: data.id,\n        locale: data.locale,\n        localizations: data.localizations,\n        locales,\n        defaultLocale,\n        isPreview: true,\n      }\n\n      const localizedPaths = getLocalizedPaths(context)\n\n      setPageContext({ ...context, localizedPaths })\n    }\n\n    fetchData()\n  }, [slug, locales, defaultLocale, locale])\n\n  if (!pageContext || !strapiGlobal) {\n    return <div>loading preview...</div>\n  }\n\n  if (!cookies.strapiPreview) {\n    return (\n      <Layout pageContext={pageContext} global={strapiGlobal}>\n        <div className=\"mt-4 text-center\">\n          You need to turn preview mode on to view this page\n        </div>\n      </Layout>\n    )\n  }\n\n  return (\n      <Layout pageContext={pageContext} global={strapiGlobal} seo={metaData}>\n        {secretPage && (\n          <div>\n            <Sections sections={secretPage.contentSections} />\n          </div>\n        )}\n      </Layout>\n  )\n}\n\nexport default PreviewPage\n\nexport const query = graphql`\n  query PreviewSiteQuery($locale: String!) {\n    site {\n      siteMetadata {\n        languages {\n          locales\n          defaultLocale\n        }\n      }\n    }\n    strapiGlobal(locale: { eq: $locale }) {\n      ...GlobalData\n    }\n  }\n`"],"sourceRoot":""}